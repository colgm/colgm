use libc::puts;

pub struct A {
    a: i64,
    b: i32
}

pub struct B {
    a: i32,
    b: i64
}

pub struct Test<T> {
    test: T
}

impl Test<T> {
    pub func get_test(self) -> T {
        puts("[test_lib/data.colgm] get_test called");
        return self->test;
    }
}

pub struct EmbedTest<T> {
    test: Test<T>
}

// try trigger redefinition
pub func test_i32() -> Test<i32> {
    puts("[test_lib/data.colgm] redefinition test passed");
    return Test<i32> { test: 42 => i32 };
}

struct PrivateStruct<T> {
    field: T
}

pub struct PublicStruct<T> {
    field: PrivateStruct<T>
}

impl PublicStruct<T> {
    pub func instance() -> PublicStruct<T> {
        return PublicStruct<T> { field: PrivateStruct<T> { field: 42 => T } };
    }
    pub func get_field(self) -> T {
        puts("[test_lib/data.colgm] get_field called");
        return self->field.field;
    }
}