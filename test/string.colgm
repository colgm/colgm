use std::libc::{ puts, malloc, free };

struct str {
    c_str: i8*,
    size: i64
}

impl str {
    pub func new(src: i8*) -> str* {
        var result = str::__alloc__();
        var index = 0;
		while (src[index] != 0) {
            index += 1;
        }
        result->c_str = malloc(index => u64 + 1);
        result->size = index;
        for (var i = 0; i < index; i += 1) {
            result->c_str[i] = src[i];
        }
		result->c_str[index] = 0;
        return result;
    }

    pub func print(self) {
        puts(self->c_str);
    }

    pub func free(self) {
        free(self->c_str);
    }
}

func main() -> i32 {
    var string: str* = str::new("[string.colgm] Hello World");
    string->print();
    string->free();
    free(string => i8*);

    var another: str* = str::new("[string.colgm] Another String");
    another->print();
    another->free();
    free(another => i8*);

    return 0;
}
