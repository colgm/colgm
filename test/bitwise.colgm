use libc::{ write, puts, strlen, itoa };

pub func hexdump(buf: i8*) {
    write(1, "[bitwise.colgm] ", 16);
    write(1, "0x", 2);
    write(1, buf, strlen(buf));
    write(1, "\n", 1);
    return;
}

pub func main() -> i64 {
    var i = 0x1;
    var total = 0x0;
    var buf = [i8; 128];
    while(i < 0x80000000) {
        total = total | i;
        itoa(total => i64, buf, 16);
        hexdump(buf);
        i *= 0x2;
    }
    i = 0x1;
    total = 0x0;
    while(i < 0x80000000) {
        total |= i;
        itoa(total => i64, buf, 16);
        hexdump(buf);
        i *= 0x2;
    }

    i = 0x1;
    puts("[bitwise.colgm] bnot test begin...");
    while (i < 0x80000000) {
        var res = i ^ ((-1) => u64);
        if (i % 0x10000000 == 0 => u64) {
            puts("[bitwise.colgm] bnot test progress...");
        }
        if (res != ~i) {
            puts("[bitwise.colgm] bnot test failed!");
        }
        i += (1 => u64);
    }
    puts("[bitwise.colgm] bnot test passed!");
    return 0;
}