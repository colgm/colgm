
struct mir_block {
    a: u8,  // 1 align 1
            // 1
    b: u16, // 2 align 2
            // 4
    c: u64  // 8 align 8
} // 16 align 8

struct mir_num {
    a: [u8; 127]
}

struct mir_str {}

// type {
//     i64,           // 8 align 8
//     mir_block      // 16 align 8
//     [u8; 127 - 16] // 111 align 1
//                    // 1 for alignment
// }                  // 136 align 8
pub union(enum) mir {
    m_block: mir_block,
    m_num: mir_num,
    m_str: mir_str
}

pub enum mir_tag {
    m_block = 0x0010,
    m_num = 0x0100,
    m_str = 0x1000
}

pub union(mir_tag) mir_with_tag {
    m_block: mir_block,
    m_num: mir_num,
    m_str: mir_str
}

impl mir_with_tag {
    pub func get_tag(self) -> mir_tag {
        return self->__kind__();
    }
}

func test() {
    // var a = mir_with_tag::m_block(mir_block {a: 1, b: 2, c: 3});
    // var b = mir_with_tag::m_num(mir_num {a: [0]});
    // var c = mir_with_tag::m_str(mir_str {});
}