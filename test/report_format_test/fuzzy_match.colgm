struct vec_push {
    pu: i32,
    sh: i32
}

impl vec_push {
    pub func push(self) {
        // do something
    }
    pub func test() {
        var vp = vec_push {};
        vp.push_back();
    }
}

struct vec_push_back {
    pu: i32,
    sh: i32,
    ba: i32,
    ck: i32
}

impl vec_push_back {
    pub func push_back(self) {}
    pub func test() {
        var vpb = vec_push_back {};
        vpb.push();
    }
}

union(enum) tagged_union_push {
    push: i64
}

union(enum) tagged_union_push_back {
    push_back: i64
}

func main() -> i32 {
    vec_push::test();
    vec_push_back::test();

    var vp_wrong = vec_push { p: 0 };
    var vpb_wrong = vec_push_back { p: 0 };

    var tup = tagged_union_push { push: 0 };
    var tup_wrong = tagged_union_push { pu: 0 };
    tup.push_back;

    var tupb = tagged_union_push_back { push_back: 0 };
    var tupb_wrong = tagged_union_push_back { pushb: 0 };
    tupb.push;
    return 0;
}