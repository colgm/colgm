use std::libc::{ puts };

func main() -> i32 {
    var a: i8 = 0;
    var b: i16 = 0;
    var c: i32 = 0;
    var d: i64 = 0;
    var e: u8 = 0;
    var f: u16 = 0;
    var g: u32 = 0;
    var h: u64 = 0;
    var i: f32 = 0.0;
    var j: f64 = 0.0;

    a => u8;
    a => u16;
    a => u32;
    a => u64;
    a => i8;
    a => i16;
    a => i32;
    a => i64;
    a => f32;
    a => f64;
    a => i8*;
    puts("[type_convert] a: i8 convert passed");

    b => u8;
    b => u16;
    b => u32;
    b => u64;
    b => i8;
    b => i16;
    b => i32;
    b => i64;
    b => f32;
    b => f64;
    b => i8*;
    puts("[type_convert] b: i16 convert passed");

    c => u8;
    c => u16;
    c => u32;
    c => u64;
    c => i8;
    c => i16;
    c => i32;
    c => i64;
    c => f32;
    c => f64;
    c => i8*;
    puts("[type_convert] c: i32 convert passed");

    d => u8;
    d => u16;
    d => u32;
    d => u64;
    d => i8;
    d => i16;
    d => i32;
    d => i64;
    d => f32;
    d => f64;
    d => i8*;
    puts("[type_convert] d: i64 convert passed");

    e => u8;
    e => u16;
    e => u32;
    e => u64;
    e => i8;
    e => i16;
    e => i32;
    e => i64;
    e => f32;
    e => f64;
    e => i8*;
    puts("[type_convert] e: u8 convert passed");

    f => u8;
    f => u16;
    f => u32;
    f => u64;
    f => i8;
    f => i16;
    f => i32;
    f => i64;
    f => f32;
    f => f64;
    f => i8*;
    puts("[type_convert] f: u16 convert passed");

    g => u8;
    g => u16;
    g => u32;
    g => u64;
    g => i8;
    g => i16;
    g => i32;
    g => i64;
    g => f32;
    g => f64;
    g => i8*;
    puts("[type_convert] g: u32 convert passed");

    h => u8;
    h => u16;
    h => u32;
    h => u64;
    h => i8;
    h => i16;
    h => i32;
    h => i64;
    h => f32;
    h => f64;
    h => i8*;
    puts("[type_convert] h: u64 convert passed");

    i => u8;
    i => u16;
    i => u32;
    i => u64;
    i => i8;
    i => i16;
    i => i32;
    i => i64;
    i => f32;
    i => f64;
    puts("[type_convert] i: f32 convert passed");

    j => u8;
    j => u16;
    j => u32;
    j => u64;
    j => i8;
    j => i16;
    j => i32;
    j => i64;
    j => f32;
    j => f64;
    puts("[type_convert] j: f64 convert passed");

    return 0;
}