
struct str {
    c_str: i8*,
    size: u32
}

impl str {
    func new() -> str* {
        var res: str* = malloc(sizeof(str));
        res->c_str = malloc(128);
        res->size = 0;
        res->c_str[0] = 0;
        return res;
    }
}

struct span {
    begin_line: u32,
    begin_column: u32,
    end_line: u32,
    end_column: u32
}

impl span {
    func dump(self: span*) {
        self->dump();
        return;
    }
}

struct ast {
    location: span*,
    type: u32,
    size: u32,
    child: ast*
}

impl ast {
    func new() -> ast* {
        return malloc(sizeof(ast));
    }
    func get_type(self: ast*) -> u32 {
        return self->type;
    }
}

func main(argc: i32, argv: i8**) -> i32 {
    var a: i32 = 1;
    print("hello world!\n");
    println("hello world!");
    return 1-1;
}