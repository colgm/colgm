use err::report::{ report };
use std::io::{ io };
use std::libc::{ free };
use std::str::{ str };
use package::{ package };
use ast::ast::*;
use sema::regist::{ regist_pass };
use sema::context::*;

pub struct sema {
    err: report*,
    rp: regist_pass*,
    root: root*
}

impl sema {
    pub func new(err: report*, pkg: package*) -> sema* {
        var res = sema::__alloc__();
        res->err = err;
        res->rp = regist_pass::new(err, pkg);
        return res;
    }

    pub func delete(self) {
        self->rp->delete();
        free(self->rp => i8*);
    }
}

impl sema {
    pub func scan(self, root: root*) {
        self->root = root;
        self->rp->run(root);
    }
}