use std::str::{ str };

pub enum value_kind {
    null,
    variable,
    literal
}

pub struct value_t {
    kind: value_kind,
    content: str
}

impl value_t {
    pub func instance() -> value_t {
        return value_t {
            kind: value_kind::null,
            content: str::from("")
        };
    }

    pub func null(name: str*) -> value_t {
        var res = value_t::instance();
        res.kind = value_kind::null;
        res.content.append_str(name);
        return res;
    }

    pub func variable(name: str*) -> value_t {
        var res = value_t::instance();
        res.kind = value_kind::variable;
        res.content.append_str(name);
        return res;
    }

    pub func literal(name: str*) -> value_t {
        var res = value_t::instance();
        res.kind = value_kind::literal;
        res.content.append_str(name);
        return res;
    }
}