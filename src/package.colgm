use std::str::{ str };
use err::report::{ report };
use std::io::{ io };
use std::map::{ hashmap };

pub struct package {
    err: report*,
    library_path: i8*,
    file_mapper: hashmap<str, str>
}

impl package {
    pub func new(e: report*) -> package* {
        var res = package::__alloc__();
        res->err = e;
        res->library_path = nil;
        res->file_mapper = hashmap<str, str>::instance();
        return res;
    }

    pub func delete(self) {
        self->file_mapper.delete();
    }

    pub func insert(self, name: str*, path: str*) {
        if (self->file_mapper.has(name)) {
            return;
        }
        io::stderr().out("[").green().out("package").reset().out("]");
        io::stderr().out(" insert { ").out(name->c_str).out(", ");
        io::stderr().out(path->c_str).out(" }\n");
        self->file_mapper.insert(name, path);
    }
}