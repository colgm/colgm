use std::libc::{open, read, write, close, malloc, free};
use std::str::str;

func O_RDONLY() -> i32 {
    return 0x0000 => i32;
}

func O_WRONLY() -> i32 {
    return 0x0001 => i32;
}

func O_RDWR() -> i32 {
    return 0x0002 => i32;
}

func O_APPEND() -> i32 {
    return 0x0008 => i32;
}

func O_CREAT() -> i32 {
    return 0x0100 => i32;
}

func O_TRUNC() -> i32 {
    return 0x0200 => i32;
}

func O_EXCL() -> i32 {
    return 0x0400 => i32;
}

func O_TEXT() -> i32 {
    return 0x4000 => i32;
}

func O_BINARY() -> i32 {
    return 0x8000 => i32;
}

func readfile_into_string(filename: i8*, dst: str*) -> i64 {
    var fd = open(filename, O_RDONLY() | O_BINARY());
    if (fd < (0 => i32)) {
        return fd => i64;
    }

    var buff = malloc(1024 => u64);
    var readcount = read(fd, buff, 1023);

    var index = 0;
    while(index < readcount) {
        dst->append_char(buff[index]);
        index += 1;
    }

    while(readcount!=0) {
        readcount = read(fd, buff, 1023);
        index = 0;
        while(index < readcount) {
            dst->append_char(buff[index]);
            index += 1;
        }
    }

    close(fd);
    free(buff);
    return 0;
}
