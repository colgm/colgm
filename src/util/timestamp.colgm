use std::time::{ chrono, timespec };

pub struct timestamp {
    start: timespec,
    end: timespec
}

impl timestamp {
    pub func stamp(self) {
        self.start = chrono::high_resolution_time();
    }

    pub func elapsed_sec(self) -> f64 {
        self.end = chrono::high_resolution_time();
        return chrono::duraction_s(self.start, self.end);
    }

    pub func elapsed_msec(self) -> f64 {
        self.end = chrono::high_resolution_time();
        return chrono::duraction_ms(self.start, self.end);
    }

    pub func elapsed_usec(self) -> f64 {
        self.end = chrono::high_resolution_time();
        return chrono::duraction_us(self.start, self.end);
    }

    pub func elapsed_nsec(self) -> f64 {
        self.end = chrono::high_resolution_time();
        return chrono::duraction_ns(self.start, self.end);
    }
}

pub func maketimestamp() -> timestamp {
    return timestamp {
        start: chrono::high_resolution_time(),
        end: chrono::high_resolution_time()
    };
}
