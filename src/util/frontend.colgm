use std::libc::{ free };
use lex::lexer::{ lexer };
use parse::parser::{ parser };
use package::{ package };
use err::report::{ report };
use err::panic::{ panic };
use util::cli::{ cli_option };

pub struct frontend {
    copt: cli_option*,
    err: report*,
    pkg: package*,
    lex: lexer,
    par: parser
}

impl frontend {
    pub func instance(co: cli_option*) -> frontend {
        var err = report::new();
        var pkg = package::new(err);

        return frontend {
            copt: co,
            err: err,
            pkg: pkg,
            lex: lexer::instance(err),
            par: parser::instance(err, co)
        };
    }

    pub func delete(self) {
        self->err->delete();
        free(self->err => i8*);
        self->pkg->delete();
        free(self->pkg => i8*);
        self->lex.delete();
        self->par.delete();
    }
}
