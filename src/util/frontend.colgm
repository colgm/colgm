use std::libc::{ free };
use std::panic::{ panic };

use parse::parser::{ parser };
use err::report::{ report };

use util::package::{ package };
use util::cli::{ cli_option };

pub struct frontend {
    copt: cli_option*,
    err: report*,
    pkg: package,
    par: parser
}

impl frontend {
    pub func instance(co: cli_option*) -> frontend {
        var err = report::new();

        return frontend {
            copt: co,
            err: err,
            pkg: package::instance(),
            par: parser::instance(err, co)
        };
    }

    pub func delete(self) {
        self->err->delete();
        free(self->err => i8*);
        self->pkg.delete();
        self->par.delete();
    }
}
