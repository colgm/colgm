use libc::{ puts, memcpy, malloc, free, itoa };

func main() -> i64 {
    var result = [i8; 256];
    memcpy(result, "[to_str.colgm] ", 15 => u64);

    var buff_begin = ((result => u64) + (15 => u64)) => i8*;

    itoa(114514, buff_begin, 2);
    puts(result);
    itoa(114514, buff_begin, 8);
    puts(result);
    itoa(114514, buff_begin, 10);
    puts(result);
    itoa(114514, buff_begin, 16);
    puts(result);

    var index = 0;
    while(index <= 2147483647) {
        if (index % 25000000 == 0 and index > 0) {
            itoa(index, buff_begin, 2);
            puts(result);
            itoa(index, buff_begin, 8);
            puts(result);
            itoa(index, buff_begin, 10);
            puts(result);
            itoa(index, buff_begin, 16);
            puts(result);
        } elsif (index == 2147483647 and index > 0) {
            itoa(index, buff_begin, 2);
            puts(result);
            itoa(index, buff_begin, 8);
            puts(result);
            itoa(index, buff_begin, 10);
            puts(result);
            itoa(index, buff_begin, 16);
            puts(result);
        }
        index += 1;
    }
    return 0;
}
