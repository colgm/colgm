extern func puts(s: i8*) -> i32;
extern func malloc(s: i64) -> i8*;
extern func free(s: i8*);

struct str {
    c_str: i8*,
    size: i64
}

impl str {
    func new(src: i8*) -> str* {
        var result: str* = str::__alloc__();
        var index: i64 = 0;
        while(src[index]!=(0 => i8)) {
            index += 1;
        }
        result->c_str = malloc(index);
        result->size = index;
        var i: i64 = 0;
        while(i<=index) {
            result->c_str[i] = src[i];
            i += 1;
        }
        return result;
    }
    func print(self) {
        puts(self->c_str);
        return;
    }
    func free(self) {
        free(self->c_str);
        return;
    }
}

func main() -> i32 {
    var string: str* = str::new("[string.colgm] Hello World");
    string->print();
    string->free();
    var another: str* = str::new("[string.colgm] Another String");
    another->print();
    another->free();
    return 0 => i32;
}